class RDDemoControllerScreen : FSEIterable, IKTapControllerDelegate
{
	private declare backgroundFirst : CKStaticImage
	private declare backgroundSecond : CKStaticImage
	private declare render : CKRender

	public method initialize(canvas : CKCanvas, tapController : IKTapController)
	{
		this.identifier = "Demo Controller Screen"

		this.tapController = tapController

		this.render = new CKRender()
		this.render.initialize(canvas)

		declare riseTextImage = new Image()
		riseTextImage.src = "data/rise.png"

		declare eyesImage = new Image()
		eyesImage.src = "data/eyes.png"

		declare phoenixImage = new Image()
		phoenixImage.src = "data/phoenix.png"

		declare phoenix = new CKStaticImage()
		phoenix.initialize(phoenixImage)

		phoenix.frame.x = 100
		phoenix.frame.y = 190

		declare eyesText = new CKStaticImage()
		eyesText.initialize(eyesImage)
		eyesText.frame.x = 30
		eyesText.frame.y = 500

		declare riseText = new CKStaticImage()
		riseText.initialize(riseTextImage)

		declare backgroundImage = new Image()
		backgroundImage.src = "data/background.png"

		backgroundFirst = new CKStaticImage();
		backgroundFirst.initialize(backgroundImage)

		backgroundSecond = new CKStaticImage();
		backgroundSecond.initialize(backgroundImage)

		backgroundSecond.frame.x = 320

		render.add(object : backgroundFirst)
		render.add(object : backgroundSecond)
		render.add(object : riseText)
		render.add(object : eyesText)
		render.add(object : phoenix)
	}

	public method step()
	{
		render.render()

		backgroundFirst.frame.x -= 1
		backgroundSecond.frame.x -= 1

		if (backgroundFirst.frame.x <= -320)
		{
			backgroundFirst.frame.x = 0
			backgroundSecond.frame.x = 320
		}

	}

	public method tapControllerDidReceivedEvent(controller : IKTapController, received tapEvent : IKTap)
	{
		RiseBuiltInMethods.print("tapControllerDidReceivedEvent")
	}

}